<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use VK\Client\VKApiClient;

class HomeController extends Controller
{
//    /**
//     * Create a new controller instance.
//     *
//     * @return void
//     */
//    public function __construct()
//    {
//        $this->middleware('auth');
//    }

    /**
     * @return string
     */
    public function index()
    {
        header("HTTP/1.1 200 OK");
        $vk_callback_event =  json_decode(file_get_contents("php://input"), true);
        $this -> getlog(json_encode($vk_callback_event));

        if ($vk_callback_event['secret'] !== getenv('VK_SECRET_TOKEN')) {
            return response('nioh');
        }


            switch ($vk_callback_event['type']){
                case 'confirmation':
                    return response(getenv('VK_CONFIRMATION_CODE'));
                    break;

                case 'message_new':
                    try{
                        $object = $vk_callback_event['object'];
                        $user_id = $object['from_id'];
                        $txt =  $object['text'];
                        $value_button =  $object['payload']['button'];

                        // –ø–æ–ª—É—á–∞—é –µ–≥–æ –∏–º—è
                        $vk = new VKApiClient('5.103');
                        $response = $vk->users()->get(getenv('VK_TOKEN'), array(
                            'user_ids' => [$user_id],
                        ));
                        $name = $response[0]['first_name'];

//                        require_once 'keyboards.php';

                        //–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                        $keyboard_index =
                            [
                                "one_time" => false,
                                "buttons" => [
                                    [
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"speech_recognition\"}",
                                                "label" => "üó£ –†–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏–µ —Ä–µ—á–∏"
                                            ],
                                            "color" => "positive"
                                        ],
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"speech_synthesis\"}",
                                                "label" => "ü§ñ ü§ñ–°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏"
                                            ],
                                            "color" => "positive"
                                        ],
                                    ],
                                    [
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"history_day\"}",
                                                "label" => "üó£–ò—Å—Ç–æ—Ä–∏—è –¥–Ω—è"
                                            ],
                                            "color" => "positive"
                                        ],
                                    ]
                                ]

                            ];

                        // –º–µ–Ω—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏
                        $keyboard_speech_synthesis =
                            [
                                "one_time" => false,
                                "buttons" => [
                                    [
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"voice\"}",
                                                "label" => "üó£–°–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å"
                                            ],
                                            "color" => "positive"
                                        ]
                                    ],
                                    [
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"back_index\"}",
                                                "label" => "üîô ü§ñ–ù–∞–∑–∞–¥"
                                            ],
                                            "color" => "negative"
                                        ],
                                    ]
                                ]

                            ];

                        // –º–µ–Ω—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ –¥–ª—è —Å–º–µ–Ω—ã –≥–æ–ª–æ—Å–∞
                        $keyboard_speech_synthesis_voice =
                            [
                                "one_time" => false,
                                "buttons" => [
                                    [
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"voice_man\"}",
                                                "label" => "üó£ –ú—É–∂—á–∏–Ω–∞"
                                            ],
                                            "color" => "positive"
                                        ],
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"voice_woman\"}",
                                                "label" => "üó£ –ñ–µ–Ω—â–∏–Ω–∞"
                                            ],
                                            "color" => "positive"
                                        ]
                                    ],
                                    [
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"back_index\"}",
                                                "label" => "üîô ü§ñ–ù–∞–∑–∞–¥"
                                            ],
                                            "color" => "negative"
                                        ],
                                    ]
                                ]

                            ];

                        $keyboard_speech_recognition =
                            [
                                "one_time" => false,
                                "buttons" => [
                                    [
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"speech_recognition_instructions\"}",
                                                "label" => "üó£–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –±–µ—Å–µ–¥—É"
                                            ],
                                            "color" => "positive"
                                        ],

                                    ],
                                    [
                                        [
                                            "action" => [
                                                "type" => "text",
                                                "payload" => "{\"button\": \"back_index\"}",
                                                "label" => "üîô ü§ñ–ù–∞–∑–∞–¥"
                                            ],
                                            "color" => "negative"
                                        ],
                                    ]
                                ]

                            ];


                        switch ( $value_button || $txt){
                            case  "start" :
                                $message = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å $name! \n –Ø –ú—É–ª—å—Ç–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π –±–æ—Ç, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π [vladislav_nep | –ù–µ–ø–æ–º–Ω—è—â–∏—Ö –í–ª–∞–¥–∏—Å–ª–∞–≤–æ–º], —É –º–µ–Ω—è –µ—Å—Ç—å —Å–≤–æ–π —Å–∞–π—Ç, –µ–≥–æ –Ω–∞–π–¥–µ—Ç–µ –≤ —Å—Å—ã–ª–∫–∞—Ö. \n –ß—Ç–æ —è —É–º–µ—é: \n 1Ô∏è‚É£ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è \n 2Ô∏è‚É£ –ú–µ–Ω—è—Ç—å –≥–æ–ª–æ—Å \n 3Ô∏è‚É£ –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç \n 4Ô∏è‚É£ –î–æ–±–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç \n 5Ô∏è‚É£ –ü–æ–≤–µ—Å–∏–ª–∏—Ç—å –≤–∞—Å –∏—Å—Ç–æ—Ä–∏–µ–π –¥–ª—è! \n \n –ù–∞–¥–µ—é—Å—å —è –≤–∞–º –ø–æ–º–æ–≥—É –∏–ª–∏ –¥–æ—Å—Ç–∞–≤–ª—é —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ!";
                                $value_keyboard = $keyboard_index;
                                break;

                            case  "speech_recognition" :
                                $message = "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ";
                                $value_keyboard = $keyboard_speech_recognition;
                                break;

                            case  "speech_synthesis" :
                                $message = "–°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –∑–∞–ø—É—â–µ–Ω, –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)";
                                $value_keyboard = $keyboard_speech_synthesis;

//                                return  redirect() -> route('Speech_SynthesisController@index');
                                break;

                            case  "voice" :
                                $message = "–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ";
                                $value_keyboard = $keyboard_speech_synthesis_voice;
                                break;

                            case  "history_day" :
                                $message = "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ";
                                $value_keyboard = "";
                                break;

                            case "back_index" :
                                $message = "";
                                $value_keyboard = $keyboard_index;
                                break;

                            default:
                                $message = "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª! –ü–æ—á–µ–º—É? \n 1) –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ \n 2) –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ \n 3) –ê—É–¥–∏–æ –¥–ª–∏–Ω–Ω–µ–µ 30 —Å–µ–∫ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏—è —Ä–µ—á–∏";
                                $value_keyboard = $keyboard_index;
                            break;
                        }

                            // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            $vk = new VKApiClient('5.103');
                            $response = $vk->messages()->send(getenv('VK_TOKEN'), array(
                                'user_id' => $user_id,
                                'message' => $message,
                                'keyboard' => json_encode($value_keyboard),
                                'random_id' => rand(),
                            ));

                            echo 'ok';
                            break;
                    } catch (\VK\Exceptions\VKApiException $e){
                        $this -> getlog($e -> getMessage());
                    }

                  }

    }

    function getlog($msg){
        file_put_contents('php://stdout', $msg. "\n");
    }

}
